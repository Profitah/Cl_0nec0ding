{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yuna/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/githubclonecoding/src/pages/users/[name].jsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nvar style = new String(\".profile-box.jsx-3080833711{width:25%;max-width:272px;margin-right:26px;}.profile-image-wrapper.jsx-3080833711{width:100%;border:1px solid #e1e4e8;}.profile-image-wrapper.jsx-3080833711 .profile-image.jsx-3080833711{display:block;width:100%;}.profile-username.jsx-3080833711{margin:0;padding-top:16px;font-size:20px;}.profile-user-login.jsx-3080833711{margin:0;padding-top:16px;font-size:26px;}.profile-user-bio.jsx-3080833711{margin:0;padding-top:16px;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dW5hL0Rlc2t0b3Av4YSG4YWu4YSM4YWmIOGEkeGFqeGGr+GEg+GFpS9naXRodWJjbG9uZWNvZGluZy9zcmMvcGFnZXMvdXNlcnMvW25hbWVdLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHaUIsQUFHbUIsQUFNQyxBQUtHLEFBS0wsQUFNQSxBQU1BLFNBWFEsQUFNQSxBQU1BLENBNUJELENBTVMsR0FLZCxXQUNmLENBWHNCLEFBZ0JILEFBTUEsQUFNQSxVQXRCbkIsS0FXQSxBQU1BLEFBTUEsR0E1QkEiLCJmaWxlIjoiL1VzZXJzL3l1bmEvRGVza3RvcC/hhIbhha7hhIzhhaYg4YSR4YWp4Yav4YSD4YWlL2dpdGh1YmNsb25lY29kaW5nL3NyYy9wYWdlcy91c2Vycy9bbmFtZV0uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNzcyBmcm9tIFwic3R5bGVkLWpzeC9jc3NcIjsgIFxuaW1wb3J0IGZldGNoIGZyb20gXCJpc29tb3JwaGljLXVuZmV0Y2hcIjsgXG5cbmNvbnN0IHN0eWxlID0gY3NzYFxuICAgIC5wcm9maWxlLWJveCB7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIG1heC13aWR0aDogMjcycHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMjZweDtcbiAgICB9XG5cbiAgICAucHJvZmlsZS1pbWFnZS13cmFwcGVyIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWU0ZTg7XG4gICAgfVxuXG4gICAgLnByb2ZpbGUtaW1hZ2Utd3JhcHBlciAucHJvZmlsZS1pbWFnZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAucHJvZmlsZS11c2VybmFtZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDE2cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG5cbiAgICAucHJvZmlsZS11c2VyLWxvZ2luIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgICAgICAgZm9udC1zaXplOiAyNnB4OyAgICBcbiAgICB9XG5cbiAgICAucHJvZmlsZS11c2VyLWJpbyB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZy10b3A6IDE2cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5gO1xuXG5jb25zdCBQcm9maWxlID0gKHsgdXNlciB9KSA9PiB7XG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9maWxlLWJveFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZmlsZS1pbWFnZS13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwicHJvZmlsZS1pbWFnZVwiIHNyYz17dXNlci5hdmF0YXJfdXJsfSBhbHQ9e2Ake3VzZXIubmFtZX1gfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJwcm9maWxlLXVzZXJuYW1lXCI+e3VzZXIubmFtZX08L2gyPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInByb2ZpbGUtdXNlci1sb2dpblwiPnt1c2VyLmxvZ2lufTwvcD5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwcm9maWxlLXVzZXItYmlvXCI+e3VzZXIuYmlvfTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57c3R5bGV9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHMgPSBhc3luYyAoeyBwYXJhbXMgfSkgPT4ge1xuICAgIGNvbnN0IHtuYW1lfSA9IHF1ZXJ5O1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzLyR7bmFtZX1gKTtcbiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgICAgICByZXR1cm4geyBwcm9wczogeyB1c2VyIH0gfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBwcm9wczoge30gfTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICByZXR1cm4geyBwcm9wczoge30gfTtcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBuYW1lO1xuIl19 */\\n/*@ sourceURL=/Users/yuna/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/githubclonecoding/src/pages/users/[name].jsx */\");\nstyle.__hash = \"3080833711\";\n\nvar Profile = function Profile(_ref) {\n  var user = _ref.user;\n\n  if (!user) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-image-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"\".concat(user.name),\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), __jsx(\"h2\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, user.name), __jsx(\"p\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-user-login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, user.login), __jsx(\"p\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-user-bio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, user.bio)), __jsx(_JSXStyle, {\n    id: style.__hash,\n    __self: _this\n  }, style));\n};\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/yuna/Desktop/무제 폴더/githubclonecoding/src/pages/users/[name].jsx"],"names":["style","Profile","user","avatar_url","name","login","bio"],"mappings":";;;;;;AAGA,IAAMA,KAAK,kjHAAX;;;AAoCA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC1B,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AACD,SACI,4BACI;AAAA,mDAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,mDAAe,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAA+B,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAzC;AAAqD,IAAA,GAAG,YAAKD,IAAI,CAACE,IAAV,CAAxD;AAAA,mDAAe,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAA,mDAAc,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,IAAI,CAACE,IAAvC,CAJJ,EAKI;AAAA,mDAAa,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,IAAI,CAACG,KAAxC,CALJ,EAMI;AAAA,mDAAa,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,IAAI,CAACI,GAAtC,CANJ,CADJ;AAAA;AAAA;AAAA,YADJ;AAaH,CAjBD;;KAAML,O;;AAkCN,eAAeG,IAAf","sourcesContent":["import css from \"styled-jsx/css\";  \nimport fetch from \"isomorphic-unfetch\"; \n\nconst style = css`\n    .profile-box {\n        width: 25%;\n        max-width: 272px;\n        margin-right: 26px;\n    }\n\n    .profile-image-wrapper {\n        width: 100%;\n        border: 1px solid #e1e4e8;\n    }\n\n    .profile-image-wrapper .profile-image {\n        display: block;\n        width: 100%;\n    }\n\n    .profile-username {\n        margin: 0;\n        padding-top: 16px;\n        font-size: 20px;\n    }\n\n    .profile-user-login {\n        margin: 0;\n        padding-top: 16px;\n        font-size: 26px;    \n    }\n\n    .profile-user-bio {\n        margin: 0;\n        padding-top: 16px;\n        font-size: 14px;\n    }\n`;\n\nconst Profile = ({ user }) => {\n    if (!user) {\n        return null;\n    }\n    return (\n        <>\n            <div className=\"profile-box\">\n                <div className=\"profile-image-wrapper\">\n                    <img className=\"profile-image\" src={user.avatar_url} alt={`${user.name}`} />\n                </div>\n                <h2 className=\"profile-username\">{user.name}</h2>\n                <p className=\"profile-user-login\">{user.login}</p>\n                <p className=\"profile-user-bio\">{user.bio}</p>\n            </div>\n            <style jsx>{style}</style>\n        </>\n    );\n};\n\nexport const getServerSideProps = async ({ params }) => {\n    const {name} = query;\n    try {\n        const res = await fetch(`https://api.github.com/users/${name}`);\n        if (res.status === 200) {\n            const user = await res.json();\n            return { props: { user } };\n        }\n        return { props: {} };\n    } catch (e) {\n        console.log(e);\n        return { props: {} };\n    }\n};\n\nexport default name;\n"]},"metadata":{},"sourceType":"module"}