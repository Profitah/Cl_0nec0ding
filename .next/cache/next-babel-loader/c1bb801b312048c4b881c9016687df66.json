{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yuna/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/githubclonecoding/src/pages/users/[name].jsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { GoMail } from \"react-icons/go\";\nimport { Profile } from \"../../components/Profile\";\nimport { Repositories } from \"../../components/Repositories\";\nvar style = new String(\".user-contents-wrapper.jsx-1668131750{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding-top:50px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dW5hL0Rlc2t0b3Av4YSG4YWu4YSM4YWmIOGEkeGFqeGGr+GEg+GFpS9naXRodWJjbG9uZWNvZGluZy9zcmMvcGFnZXMvdXNlcnMvW25hbWVdLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLaUIsQUFHa0IsMEVBQ1UsbUdBQ04saUJBQ25CIiwiZmlsZSI6Ii9Vc2Vycy95dW5hL0Rlc2t0b3Av4YSG4YWu4YSM4YWmIOGEkeGFqeGGr+GEg+GFpS9naXRodWJjbG9uZWNvZGluZy9zcmMvcGFnZXMvdXNlcnMvW25hbWVdLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG5pbXBvcnQgeyBHb01haWwgfSBmcm9tIFwicmVhY3QtaWNvbnMvZ29cIjtcbmltcG9ydCBjc3MgZnJvbSBcInN0eWxlZC1qc3gvY3NzXCI7IFxuaW1wb3J0IHsgUHJvZmlsZSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL1Byb2ZpbGVcIjsgXG5pbXBvcnQgeyBSZXBvc2l0b3JpZXMgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9SZXBvc2l0b3JpZXNcIjtcbmNvbnN0IHN0eWxlID0gY3NzYFxuICAudXNlci1jb250ZW50cy13cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICB9XG5gO1xuXG5jb25zdCBuYW1lPSAoeyB1c2VyLCByZXBvcyB9KSA9PiB7XG4gIGlmICghdXNlcikge1xuICAgIHJldHVybiA8ZGl2Pk5vIHVzZXIgZm91bmQ8L2Rpdj47XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlci1jb250ZW50cy13cmFwcGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2ZpbGUtYm94XCI+XG4gICAgICAgIDxpbWcgY2xhc3NOYW1lPVwicHJvZmlsZS1pbWFnZVwiIHNyYz17dXNlci5hdmF0YXJfdXJsfSBhbHQ9e2Ake3VzZXIubmFtZX0ncyBhdmF0YXJgfSAvPlxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwicHJvZmlsZS11c2VybmFtZVwiPnt1c2VyLm5hbWV9PC9oMT5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwicHJvZmlsZS11c2VyLWluZm9cIj57dXNlci5iaW99PC9wPlxuICAgICAgICB7dXNlci5lbWFpbCAmJiAoXG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwicHJvZmlsZS11c2VyLWluZm9cIj5cbiAgICAgICAgICAgIDxHb01haWwgc2l6ZT17MTZ9IGNvbG9yPVwiIzZhNzM3ZFwiIC8+XG4gICAgICAgICAgICA8c3Bhbj57dXNlci5lbWFpbH08L3NwYW4+XG4gICAgICAgICAgPC9wPlxuICAgICAgICApfVxuICAgICAgICA8cCBjbGFzc05hbWU9XCJwcm9maWxlLXVzZXItaW5mb1wiPjwvcD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXBvcy13cmFwcGVyXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXBvcy1oZWFkZXJcIj5cbiAgICAgICAgICAgIFJlcG9zaXRvcmllc1xuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVwb3MtY291bnRcIj57cmVwb3MubGVuZ3RofTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwicmVwb3NcIj5cbiAgICAgICAgICAgIHtyZXBvcy5tYXAoKHJlcG8pID0+IChcbiAgICAgICAgICAgICAgPGxpIGtleT17cmVwby5pZH0gY2xhc3NOYW1lPVwicmVwby1pdGVtXCI+XG4gICAgICAgICAgICAgICAgPGEgaHJlZj17cmVwby5odG1sX3VybH0gdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiIGNsYXNzTmFtZT1cInJlcG8tbGlua1wiPlxuICAgICAgICAgICAgICAgICAge3JlcG8ubmFtZX1cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57c3R5bGV9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHF1ZXJ5IH0pID0+IHtcbiAgY29uc3QgeyBuYW1lIH0gPSBxdWVyeTtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyUmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvJHtuYW1lfWApO1xuICAgIGNvbnN0IHJlcG9zUmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvJHtuYW1lfS9yZXBvcz9zb3J0PXVwZGF0ZWQmcGFnZT0xJnBlcl9wYWdlPTEwYCk7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHVzZXJSZXMuanNvbigpO1xuICAgIGNvbnN0IHJlcG9zID0gYXdhaXQgcmVwb3NSZXMuanNvbigpO1xuICAgIHJldHVybiB7IHByb3BzOiB7IHVzZXIsIHJlcG9zIH0gfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGUpO1xuICAgIHJldHVybiB7IHByb3BzOiB7fSB9O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBuYW1lO1xuIl19 */\\n/*@ sourceURL=/Users/yuna/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/githubclonecoding/src/pages/users/[name].jsx */\");\nstyle.__hash = \"1668131750\";\n\nvar name = function name(_ref) {\n  var user = _ref.user,\n      repos = _ref.repos;\n\n  if (!user) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \"No user found\");\n  }\n\n  return __jsx(\"div\", {\n    className: \"user-contents-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"\".concat(user.name, \"'s avatar\"),\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(\"h1\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, user.name), __jsx(\"p\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-user-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, user.bio), user.email && __jsx(\"p\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-user-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(GoMail, {\n    size: 16,\n    color: \"#6a737d\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"jsx-\".concat(style.__hash),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, user.email)), __jsx(\"p\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"profile-user-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"repos-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"repos-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Repositories\", __jsx(\"span\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"repos-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, repos.length)), __jsx(\"ul\", {\n    className: \"jsx-\".concat(style.__hash) + \" \" + \"repos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, repos.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id,\n      className: \"jsx-\".concat(style.__hash) + \" \" + \"repo-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"jsx-\".concat(style.__hash) + \" \" + \"repo-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, repo.name));\n  }))), __jsx(_JSXStyle, {\n    id: style.__hash,\n    __self: _this\n  }, style)));\n};\n\nexport var __N_SSP = true;\nexport default name;","map":{"version":3,"sources":["/Users/yuna/Desktop/무제 폴더/githubclonecoding/src/pages/users/[name].jsx"],"names":["GoMail","Profile","Repositories","style","name","user","repos","avatar_url","bio","email","length","map","repo","id","html_url"],"mappings":";;;;;;AACA,SAASA,MAAT,QAAuB,gBAAvB;AAEA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,IAAMC,KAAK,sqHAAX;;;AAQA,IAAMC,IAAI,GAAE,SAANA,IAAM,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC/B,MAAI,CAACD,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,mDAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAA+B,IAAA,GAAG,EAAEA,IAAI,CAACE,UAAzC;AAAqD,IAAA,GAAG,YAAKF,IAAI,CAACD,IAAV,cAAxD;AAAA,mDAAe,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA,mDAAc,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,IAAI,CAACD,IAAvC,CAFF,EAGE;AAAA,mDAAa,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,IAAI,CAACG,GAAvC,CAHF,EAIGH,IAAI,CAACI,KAAL,IACC;AAAA,mDAAa,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAI,CAACI,KAAZ,CAFF,CALJ,EAUE;AAAA,mDAAa,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAA,mDAAe,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,mDAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAA,mDAAgB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BH,KAAK,CAACI,MAArC,CAFF,CADF,EAKE;AAAA,mDAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA,qDAA4B,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,MAAA,MAAM,EAAC,QAA/B;AAAwC,MAAA,GAAG,EAAC,qBAA5C;AAAA,qDAA4E,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACR,IADR,CADF,CADS;AAAA,GAAV,CADH,CALF,CAXF;AAAA;AAAA;AAAA,YADF,CADF;AAgCD,CArCD;;;AAqDA,eAAeA,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { GoMail } from \"react-icons/go\";\nimport css from \"styled-jsx/css\"; \nimport { Profile } from \"../../components/Profile\"; \nimport { Repositories } from \"../../components/Repositories\";\nconst style = css`\n  .user-contents-wrapper {\n    display: flex;\n    justify-content: center;\n    padding-top: 50px;\n  }\n`;\n\nconst name= ({ user, repos }) => {\n  if (!user) {\n    return <div>No user found</div>;\n  }\n\n  return (\n    <div className=\"user-contents-wrapper\">\n      <div className=\"profile-box\">\n        <img className=\"profile-image\" src={user.avatar_url} alt={`${user.name}'s avatar`} />\n        <h1 className=\"profile-username\">{user.name}</h1>\n        <p className=\"profile-user-info\">{user.bio}</p>\n        {user.email && (\n          <p className=\"profile-user-info\">\n            <GoMail size={16} color=\"#6a737d\" />\n            <span>{user.email}</span>\n          </p>\n        )}\n        <p className=\"profile-user-info\"></p>\n        <div className=\"repos-wrapper\">\n          <div className=\"repos-header\">\n            Repositories\n            <span className=\"repos-count\">{repos.length}</span>\n          </div>\n          <ul className=\"repos\">\n            {repos.map((repo) => (\n              <li key={repo.id} className=\"repo-item\">\n                <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"repo-link\">\n                  {repo.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <style jsx>{style}</style>\n      </div>\n    </div>\n  );\n};\n\nexport const getServerSideProps = async ({ query }) => {\n  const { name } = query;\n  try {\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n    const reposRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=1&per_page=10`);\n    const user = await userRes.json();\n    const repos = await reposRes.json();\n    return { props: { user, repos } };\n  } catch (e) {\n    console.log(e);\n    return { props: {} };\n  }\n};\n\nexport default name;\n"]},"metadata":{},"sourceType":"module"}